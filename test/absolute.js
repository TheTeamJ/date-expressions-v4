/* eslint-env mocha */
const { testRanges, expandD, expandMD } = require('./lib')
const ConstRanges = require('./const')

const runLateTest = false

// 実行基準日は 2020/05/10 00:00 に固定されている
describe('Resolve absolute date ranges', function () {
  it('basic mono', function () {
    testRanges('2015年', [['2015/01/01 00:00', '2015/12/31 23:59']])
    testRanges('4月', [['2020/04/01 00:00', '2020/04/30 23:59']])
    testRanges('12日', [['2020/05/12 00:00', '2020/05/12 23:59']])
    testRanges('13時', [['2020/05/10 13:00', '2020/05/10 13:59']])
  })

  it('should return empty range', function () {
    testRanges('2月/元旦', [])
    testRanges('春/7月', [])
    testRanges('午前/午後', [])
    testRanges('6日/午前中/13時', [])
    testRanges('2000年/インターンシップ', [])
    testRanges('9月/ハッピーデー', [])
    testRanges('インターンシップ/ハッピーデー', [])
  })

  it('specials', function () {
    testRanges('去年/今日', [['2019/05/10 00:00', '2019/05/10 23:59']])
    testRanges('2015年/今月', [['2015/05/01 00:00', '2015/05/31 23:59']])
    testRanges('2015年/今月/今日', [['2015/05/10 00:00', '2015/05/10 23:59']])
    testRanges('2015年/先月', [['2015/04/01 00:00', '2015/04/30 23:59']])
    testRanges('2015年/先月/今日/午前', [['2015/04/10 00:00', '2015/04/10 11:59']])
    testRanges('2015年/今日', [['2015/05/10 00:00', '2015/05/10 23:59']])
    testRanges('去年/今頃/5日', [
      ['2019/04/05 00:00', '2019/04/05 23:59'],
      ['2019/05/05 00:00', '2019/05/05 23:59'],
      ['2019/06/05 00:00', '2019/06/05 23:59']
    ])
    testRanges('ここ2年/今頃', [
      ['2019/04/01 00:00', '2019/06/30 23:59'],
      ['2020/04/01 00:00', '2020/06/30 23:59']
    ])
    testRanges('去年/秋/今日', [
      ['2019/09/10 00:00', '2019/09/10 23:59'],
      ['2019/10/10 00:00', '2019/10/10 23:59'],
      ['2019/11/10 00:00', '2019/11/10 23:59']
    ])
  })

  it('inheritX', function () {
    testRanges('2015年/4月', [['2015/04/01 00:00', '2015/04/30 23:59']])
    testRanges('4月/12日', [['2020/04/12 00:00', '2020/04/12 23:59']])
    testRanges('12日/13時', [['2020/05/12 13:00', '2020/05/12 13:59']])
    testRanges('2015年/4月/12日', [['2015/04/12 00:00', '2015/04/12 23:59']])
    testRanges('2015年/4月/12日/13時', [['2015/04/12 13:00', '2015/04/12 13:59']])
    testRanges('4月/12日/13時', [['2020/04/12 13:00', '2020/04/12 13:59']])
    testRanges('ここ5年/元旦', ConstRanges.yRecent5m1d1)
  })

  it('expandX', function () {
    testRanges('2015年/11日', ConstRanges.y2015mFd11)
    testRanges('2015年/11日/15時', ConstRanges.y2015mFd11h15)
    testRanges('4月/13時', expandD({ y: '2020', m: '04', h: '13' }))
    if (runLateTest) {
      testRanges('2015年/11日/15時/6月', [['2015/06/11 15:00', '2015/06/11 15:59']])
      testRanges('2015年/13時', expandMD({ y: '2015', h: '13' }))
      testRanges('2015年/4月/13時', expandD({ y: '2015', m: '04', h: '13' }))
    }
  })

  it('mRange: fixed month range', function () {
    testRanges('冬', [
      ['2020/01/01 00:00', '2020/02/29 23:59'], // leap year
      ['2020/12/01 00:00', '2020/12/31 23:59']
    ])
    testRanges('冬/JSConf/午前/9時', [['2019/12/01 09:00', '2019/12/01 09:59']])
    testRanges('春', [['2020/03/01 00:00', '2020/05/31 23:59']])
    testRanges('春/4月', [['2020/04/01 00:00', '2020/04/30 23:59']])
    testRanges('旅行/春', [
      ['2017/03/05 00:00', '2017/03/06 23:59'],
      ['2019/04/05 00:00', '2019/04/07 23:59']
    ])
    testRanges('旅行/春/2019', [['2019/04/05 00:00', '2019/04/07 23:59']])
    testRanges('2015/春', [['2015/03/01 00:00', '2015/05/31 23:59']])
    testRanges('2015/春/4月', [['2015/04/01 00:00', '2015/04/30 23:59']])
    testRanges('2015/4月/春', [['2015/04/01 00:00', '2015/04/30 23:59']])
    testRanges('2015/3月/春/9日', [['2015/03/09 00:00', '2015/03/09 23:59']])
    testRanges('春/6日', [
      ['2020/03/06 00:00', '2020/03/06 23:59'],
      ['2020/04/06 00:00', '2020/04/06 23:59'],
      ['2020/05/06 00:00', '2020/05/06 23:59']
    ])
    testRanges('6日/夏', [
      ['2020/06/06 00:00', '2020/06/06 23:59'],
      ['2020/07/06 00:00', '2020/07/06 23:59'],
      ['2020/08/06 00:00', '2020/08/06 23:59']
    ])
    testRanges('ここ2年/夏/6日', [
      ['2019/06/06 00:00', '2019/06/06 23:59'],
      ['2019/07/06 00:00', '2019/07/06 23:59'],
      ['2019/08/06 00:00', '2019/08/06 23:59'],
      ['2020/06/06 00:00', '2020/06/06 23:59'],
      ['2020/07/06 00:00', '2020/07/06 23:59'],
      ['2020/08/06 00:00', '2020/08/06 23:59']
    ])
    // グループ化がうまくいっていない例
    testRanges('ここ2年/冬', [
      ['2019/01/01 00:00', '2019/02/28 23:59'],
      ['2020/01/01 00:00', '2020/02/29 23:59'],
      ['2019/12/01 00:00', '2019/12/31 23:59'],
      ['2020/12/01 00:00', '2020/12/31 23:59']
    ])
    testRanges('春/6日/23時', [
      ['2020/03/06 23:00', '2020/03/06 23:59'],
      ['2020/04/06 23:00', '2020/04/06 23:59'],
      ['2020/05/06 23:00', '2020/05/06 23:59']
    ])
  })

  if (runLateTest) {
    it('mRange with hours', function () {
      testRanges('2001/春/15時', [
        ...expandD({ y: '2001', m: '03', h: '15' }),
        ...expandD({ y: '2001', m: '04', h: '15' }),
        ...expandD({ y: '2001', m: '05', h: '15' })
      ])
      testRanges('15時/春', [
        ...expandD({ y: '2020', m: '03', h: '15' }),
        ...expandD({ y: '2020', m: '04', h: '15' }),
        ...expandD({ y: '2020', m: '05', h: '15' })
      ])
      testRanges('夏/午後', [
        ...expandD({ y: '2020', m: '06', h: ['12', '23'] }),
        ...expandD({ y: '2020', m: '07', h: ['12', '23'] }),
        ...expandD({ y: '2020', m: '08', h: ['12', '23'] })
      ])
    })
  }

  if (runLateTest) {
    it('hRange', function () {
      // testRanges('午前', [['2020/05/10 00:00', '2020/05/10 11:59']])
      testRanges('2000年/4月/午前', expandD({ y: '2000', m: '04', h: ['00', '11'] }))
      testRanges('6日/午前', [['2020/05/06 00:00', '2020/05/06 11:59']])
      testRanges('6日/午前/10時', [['2020/05/06 10:00', '2020/05/06 10:59']])
      testRanges('1990年/午後', expandMD({ y: '1990', h: ['12', '23'] }))
    })
  }

  it('fixed day: month and day', function () {
    // 単数
    testRanges('元旦', [['2020/01/01 00:00', '2020/01/01 23:59']])
    testRanges('元旦/13時', [['2020/01/01 13:00', '2020/01/01 13:59']])
    testRanges('2013年/元日', [['2013/01/01 00:00', '2013/01/01 23:59']])
    testRanges('2013年/元日/13時', [['2013/01/01 13:00', '2013/01/01 13:59']])
    // 複数
    testRanges('ハッピーデー', [
      ['2020/08/08 00:00', '2020/08/08 23:59'],
      ['2020/11/11 00:00', '2020/11/11 23:59']
    ])
    testRanges('夏/ハッピーデー', [['2020/08/08 00:00', '2020/08/08 23:59']])
    testRanges('ハッピーデー/夏', [['2020/08/08 00:00', '2020/08/08 23:59']])
    testRanges('2015年/ハッピーデー', [
      ['2015/08/08 00:00', '2015/08/08 23:59'],
      ['2015/11/11 00:00', '2015/11/11 23:59']
    ])
    testRanges('2015年/8月/ハッピーデー', [['2015/08/08 00:00', '2015/08/08 23:59']])
    testRanges('8月/ハッピーデー', [['2020/08/08 00:00', '2020/08/08 23:59']])
    testRanges('ハッピーデー/11月', [['2020/11/11 00:00', '2020/11/11 23:59']])
    testRanges('11月/ハッピーデー/午後', [['2020/11/11 12:00', '2020/11/11 23:59']])
  })

  it('fixed ranges: year, month and day', function () {
    testRanges('インターンシップ', [
      ['2015/08/10 00:00', '2015/09/04 23:59'],
      ['2017/08/14 00:00', '2017/09/29 23:59']
    ])
    testRanges('8月/インターンシップ', [
      ['2015/08/10 00:00', '2015/08/31 23:59'],
      ['2017/08/14 00:00', '2017/08/31 23:59']
    ])
    testRanges('夏/インターンシップ', [
      ['2015/08/10 00:00', '2015/08/31 23:59'],
      ['2017/08/14 00:00', '2017/08/31 23:59']
    ])
    testRanges('インターンシップ/11日', [
      ['2015/08/11 00:00', '2015/08/11 23:59'],
      ['2017/09/11 00:00', '2017/09/11 23:59']
    ])
    testRanges('インターンシップ/11日/2015年', [['2015/08/11 00:00', '2015/08/11 23:59']])
    testRanges('9月/15日/インターンシップ', [['2017/09/15 00:00', '2017/09/15 23:59']])
    testRanges('2017年/インターンシップ', [['2017/08/14 00:00', '2017/09/29 23:59']])
    testRanges('夏/B3/インターンシップ', [['2015/08/10 00:00', '2015/08/31 23:59']])
    testRanges('夏/インターンシップ/B3', [['2015/08/10 00:00', '2015/08/31 23:59']])
    testRanges('インターンシップ/旅行', [['2015/09/03 00:00', '2015/09/04 23:59']])

    if (runLateTest) {
      testRanges('2015年/インターンシップ/13時', [
        ...expandD({ y: '2015', m: '08', h: '13', start: 10, end: 31 }),
        ...expandD({ y: '2015', m: '09', h: '13', start: 1, end: 4 })
      ])
      testRanges('インターンシップ/午後', [
        ...expandD({ y: '2015', m: '08', h: ['12', '23'], start: 10, end: 31 }),
        ...expandD({ y: '2015', m: '09', h: ['12', '23'], start: 1, end: 4 }),
        ...expandD({ y: '2017', m: '08', h: ['12', '23'], start: 14, end: 31 }),
        ...expandD({ y: '2017', m: '09', h: ['12', '23'], start: 1, end: 29 })
      ])
    }
  })
})
